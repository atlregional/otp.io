{
  "name": "turf-reclass",
  "version": "0.1.1",
  "description": "turf reclass module",
  "main": "index.js",
  "scripts": {
    "test": "tape test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/morganherlocker/turf-reclass.git"
  },
  "keywords": [
    "turf",
    "reclass",
    "classification",
    "geojson"
  ],
  "author": {
    "name": "morganherlocker"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/morganherlocker/turf-reclass/issues"
  },
  "homepage": "https://github.com/morganherlocker/turf-reclass",
  "devDependencies": {
    "tape": "^2.13.4"
  },
  "dependencies": {
    "turf-featurecollection": "^0.1.0"
  },
  "readme": "turf-reclass\n============\n[![build status](https://secure.travis-ci.org/Turfjs/turf-reclass.png)](http://travis-ci.org/Turfjs/turf-reclass)\n\nTakes a feature collection, a in field, an out field, and an array of translations and outputs an identical feature collection with the out field property populated.\n\n###Install\n\n```sh\nnpm install turf-reclass\n```\n\n###Parameters\n\n|name|description|\n|---|---|\n|fc|featurcollection to transform|\n|inField|field to map|\n|outField|new field|\n|translations|an array of tanslations like:  [[0, 20, 1], [20, 40, 2], ... [60, Infinity, 4]]|\n\n###Usage\n\n```js\nreclass(pts, inField, outField, translations)\n```\n\n###Example\n\n```js\nvar reclass = require('turf-reclass')\nvar fs = require('fs')\n\nvar inField = 'elevation',\nvar outField = 'heightIndex'\n// 0 to 20 will map to 1, 20 to 40 will map to 2, etc.\nvar translations = [[0, 20, 1], [20, 40, 2], [40, 60 , 3], [60, Infinity, 4]]\n\nvar pts = JSON.parse(fs.readFileSync('/path/to/pts.geojson'))\n\nvar reclassed = reclass(pts, inField, outField, translations)\n\nconsole.log(reclassed)\n```",
  "readmeFilename": "README.md",
  "_id": "turf-reclass@0.1.1",
  "_shasum": "935136c223e306a0c288d8e47e60f8bcee3a2f72",
  "_from": "turf-reclass@0.1.1",
  "_resolved": "https://registry.npmjs.org/turf-reclass/-/turf-reclass-0.1.1.tgz"
}
