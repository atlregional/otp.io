{
  "name": "turf-quantile",
  "version": "0.1.1",
  "description": "turf quantile module",
  "main": "index.js",
  "scripts": {
    "test": "tape test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/morganherlocker/turf-quantile.git"
  },
  "keywords": [
    "turf",
    "quantile",
    "classification",
    "geojson"
  ],
  "author": {
    "name": "morganherlocker"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/morganherlocker/turf-quantile/issues"
  },
  "homepage": "https://github.com/morganherlocker/turf-quantile",
  "devDependencies": {
    "tape": "^2.13.4"
  },
  "dependencies": {
    "simple-statistics": "^0.8.1"
  },
  "readme": "turf-quantile\n=============\n[![build status](https://secure.travis-ci.org/Turfjs/turf-quantile.png)](http://travis-ci.org/Turfjs/turf-quantile)\n\nTakes a set of features, a property name, and a set of percentiles and outputs a quantile array. This can be passed as a break array to the isolines function or the isobands function.\n\n###Install\n\n```sh\nnpm install turf-quantile\n```\n\n###Parameters\n\n|name|description|\n|---|---|\n|pts|points to classify|\n|z|z field|\n|percentiles|percentiles to classify|\n\n###Usage\n\n```js\nquantile(pts, z, percentiles)\n```\n\n###Example\n\n```js\nvar quantile = require('turf-quantile')\nvar fs = require('fs')\n\nvar z = 'elevation'\nvar percentiles = [10,30,40,60,80,90,99]\n\nvar pts = JSON.parse(fs.readFileSync('/path/to/pts.geojson'))\n\nvar quantiles = quantile(pts, propertyName, percentiles)\n    \nconsole.log(quantiles) // [ 12, 25, 29, 52, 76, 99, 143 ]\n```\n",
  "readmeFilename": "README.md",
  "_id": "turf-quantile@0.1.1",
  "_shasum": "76b3a649b9d8dd417322175c6f9852b6fe70365b",
  "_from": "turf-quantile@0.1.1",
  "_resolved": "https://registry.npmjs.org/turf-quantile/-/turf-quantile-0.1.1.tgz"
}
