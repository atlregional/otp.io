{
  "name": "geojson-extent",
  "version": "0.3.1",
  "description": "compute the bounding box of geojson features",
  "main": "index.js",
  "scripts": {
    "test": "tap test/*.js",
    "build": "browserify -s geojsonExtent index.js | uglifyjs -c > geojson-extent.js"
  },
  "bin": {
    "geojson-extent": "./bin/geojson-extent"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:mapbox/geojson-extent.git"
  },
  "keywords": [
    "geojson",
    "extent",
    "browser",
    "geo",
    "boundingbox",
    "bounds"
  ],
  "author": {
    "name": "Tom MacWright"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/mapbox/geojson-extent/issues"
  },
  "homepage": "https://github.com/mapbox/geojson-extent",
  "dependencies": {
    "extent": "0.2.0",
    "geojson-coords": "0.0.0",
    "rw": "~0.1.4",
    "traverse": "~0.6.6"
  },
  "devDependencies": {
    "tap": "~0.4.8",
    "uglifyjs": "~2.3.6",
    "browserify": "~5.9.3"
  },
  "readme": "![](http://img.shields.io/travis/mapbox/geojson-extent.svg?style=flat)\n\n# geojson-extent\n\nCompute an extent given a GeoJSON object.\n\n## install\n\n    npm install --save geojson-extent\n\n## example\n\n[Live example with Mapbox Static Map API](https://www.mapbox.com/mapbox.js/example/v1.0.0/static-map-from-geojson-with-geo-viewport/)\n\n```js\nvar geojsonExtent = require('geojson-extent');\n\ngeojsonExtent({ type: 'Point', coordinates: [0, 0] }); // returns 0,0,0,0 extent\n```\n\n## bin\n\nProvides a binary that takes GeoJSON as stdin and returns a JSON stringified\narray of extent data.\n\n```sh\n$ npm install -g geojson-extent\n$ geojson-extent < file.geojson\n```\n\nGiven an argument of `leaflet`, this will return Leaflet-formatted data instead.\n\n```sh\n$ geojson-extent leaflet < file.geojson\n```\n\n## api\n\n### `extent(geojson)`\n\nGiven any valid GeoJSON object, return bounds in the form `[WSEN]`.\nInvalid objects will return `null`.\n\n### `extent.polygon(geojson)`\n\nGiven any valid GeoJSON object, return bounds in the form of a GeoJSON polygon object.\nInvalid objects will return `null`.\n\n### `extent.bboxify(geojson)`\n\nAdd [bounding boxes](http://geojson.org/geojson-spec.html#bounding-boxes) to all\nappropriate GeoJSON objects - Feature, FeatureCollection, and Geometry.\n",
  "readmeFilename": "README.md",
  "_id": "geojson-extent@0.3.1",
  "_shasum": "9ff048416e44f30a751875728fd0b29a69908e61",
  "_from": "geojson-extent@0.3.1",
  "_resolved": "https://registry.npmjs.org/geojson-extent/-/geojson-extent-0.3.1.tgz"
}
