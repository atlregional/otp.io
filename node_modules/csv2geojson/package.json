{
  "name": "csv2geojson",
  "version": "3.6.1",
  "description": "convert CSV files to GeoJSON",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/mapbox/csv2geojson.git"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "bin": {
    "csv2geojson": "csv2geojson"
  },
  "license": "BSD",
  "devDependencies": {
    "mocha": "~1.8",
    "expect.js": "~0.2.0",
    "mocha-phantomjs": "~1.1.1"
  },
  "dependencies": {
    "optimist": "~0.4.0",
    "dsv": "0.0.3",
    "sexagesimal": "0.1.0",
    "concat-stream": "~1.0.1"
  },
  "readme": "[![Build Status](https://travis-ci.org/mapbox/csv2geojson.png)](https://travis-ci.org/mapbox/csv2geojson)\n\n# csv2geojson\n\nConverts [CSV](http://en.wikipedia.org/wiki/Comma-separated_values) and [TSV](http://en.wikipedia.org/wiki/Tab-separated_values)\nfiles into [GeoJSON](http://www.geojson.org/) data suitable for maps..\n\n## Using as a binary:\n\n    npm install -g csv2geojson\n    csv2geojson geodata.csv > geodata.geojson\n\n```\nâžŸ csv2geojson\nUsage: csv2geojson -lat [string] -lon [string] -delimiter [string] FILE\n\nOptions:\n  --lat        the name of the latitude column\n  --lon        the name of the longitude column\n  --delimiter  the type of delimiter             [default: \",\"]\n```\n\n## Using in nodejs\n\n    npm install --save csv2geojson\n\n```js\nvar csv2geojson = require('csv2geojson');\n\nvar geoJson = csv2geojson.csv2geojson(csvString, function(err, data) {\n    // err has any parsing errors\n    // data is the data.\n});\n```\n\n## api\n\n```js\ncsv2geojson.csv2geojson(csvString, {\n    latfield: 'LATFIELDNAME',\n    lonfield: 'LONFIELDNAME',\n    delimiter: ','\n}, function(err, data) {\n});\n```\n\nParse a CSV file and derive a [GeoJSON](http://www.geojson.org/) object from it.\nErr is non-falsy if latitude and longitude values cannot be detected or if\nthere are invalid rows in the file. Delimiter can be ',' for CSV or '\\t' for\nTSV or '|' and other delimiters.\n\nDelimiter can also be `auto`, and it will try `, \\t | ;` and choose the 'best'.\n\n```js\ncsv2geojson.dsv(delimiter).parse(dsvString);\n```\n\nThe [dsv](https://github.com/mbostock/dsv) library for barebones DSV parsing.\n\n```js\ncsv2geojson.auto(dsvString);\n```\n\nAutomatically choose a delimiter to parse a dsv string with, and do it.\n\n```js\ncsv2geojson.toPolygon(gj);\ncsv2geojson.toLine(gj);\n```\n\nGiven a GeoJSON file consisting of points, derive one consisting of a polygon\nor line that has the coordinates of those points, in the order given.\n\n## Using in webpages\n\n    wget https://raw.github.com/tmcw/csv2geojson/gh-pages/csv2geojson.js\n\nLooks for fields like `/^Lat/i`.\n\nIncludes part of [d3js](http://d3js.org/) for CSV parsing.\n\n## See Also\n\n* [topojson](https://github.com/mbostock/topojson/) supports joining data in CSV\n* [gdal](http://www.gdal.org/) supports specific CSV structures to and from other data formats\n\nThis is what powers the CSV/TSV import of [geojson.io](http://geojson.io/).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mapbox/csv2geojson/issues"
  },
  "homepage": "https://github.com/mapbox/csv2geojson",
  "_id": "csv2geojson@3.6.1",
  "_shasum": "02a1ce66dab6aa166b18b3a900bab9028500ca4d",
  "_from": "csv2geojson@3.6.1",
  "_resolved": "https://registry.npmjs.org/csv2geojson/-/csv2geojson-3.6.1.tgz"
}
