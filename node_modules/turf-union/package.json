{
  "name": "turf-union",
  "version": "0.0.1",
  "description": "find the union of geographic features",
  "main": "index.js",
  "scripts": {
    "test": "tape test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:Turfjs/turf-union.git"
  },
  "keywords": [
    "turf",
    "gif"
  ],
  "author": {
    "name": "Morgan Herlocker"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/Turfjs/turf-union/issues"
  },
  "homepage": "https://github.com/Turfjs/turf-union",
  "devDependencies": {
    "glob": "~4.0.0",
    "tape": "~2.13.1"
  },
  "dependencies": {
    "jsts": "~0.13.4"
  },
  "readme": "turf-union\n===\n[![build status](https://secure.travis-ci.org/Turfjs/turf-union.png)](http://travis-ci.org/Turfjs/turf-union)\n\nCombines to polygons into one.\n\n###Install\n\n```sh\nnpm install turf-union\n```\n\n###Parameters\n\nname|description\n---|---\npolygon1|subject polygon\npolygon2|polygon to add\n\n###Usage\n\n```js\nunion(polygon1, polygon2)\n```\n\n###Example\n\n```js\nvar union = require('turf-union')\nvar fs = require('fs')\n\nvar poly1 = JSON.parse(fs.readFileSync('/path/to/file1.geojson'))\nvar poly2 = JSON.parse(fs.readFileSync('/path/to/file2.geojson'))\n\nvar unioned = union(poly1, poly2)\n```\n",
  "readmeFilename": "README.md",
  "_id": "turf-union@0.0.1",
  "_shasum": "7a7e4e4076faa9920f6af1648271a3f7d76fc7ac",
  "_from": "turf-union@",
  "_resolved": "https://registry.npmjs.org/turf-union/-/turf-union-0.0.1.tgz"
}
