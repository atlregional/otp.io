{
  "name": "shp-write",
  "version": "0.1.5",
  "description": "write shapefiles from pure javascript",
  "main": "index.js",
  "scripts": {
    "test": "mocha -R spec",
    "make": "browserify -s shpwrite ./ > shpwrite.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/tmcw/shp-write.git"
  },
  "keywords": [
    "shapefile",
    "write",
    "js"
  ],
  "author": {
    "name": "Tom MacWright"
  },
  "license": "BSD-2-Clause",
  "bugs": {
    "url": "https://github.com/tmcw/shp-write/issues"
  },
  "dependencies": {
    "dbf": "0.1.0",
    "jszip": "https://github.com/tmcw/jszip/archive/patch-1.tar.gz"
  },
  "devDependencies": {
    "expect.js": "~0.2.0",
    "mocha": "~1.13.0"
  },
  "readme": "[![Build Status](https://secure.travis-ci.org/mapbox/shp-write.png?branch=master)](http://travis-ci.org/mapbox/shp-write)\n\n# shp-write\n\nWrites shapefile in pure javascript. Uses [dbf](https://github.com/tmcw/dbf)\nfor the data component, and [jsZIP](http://stuk.github.io/jszip/) to generate\nZIP file downloads in-browser.\n\n## Usage\n\nFor node.js or [browserify](https://github.com/substack/node-browserify)\n\n    npm install --save shp-write\n\nOr in a browser\n\n    wget https://raw.github.com/mapbox/shp-write/master/shpwrite.js\n\n## Caveats\n\n* Requires a capable fancy modern browser with [Typed Arrays](http://caniuse.com/#feat=typedarrays)\n  support\n* Geometries: Point, LineString, Polygon\n* Tabular-style properties export with Shapefile's field name length limit\n\n## Example\n\n```js\nvar shpwrite = require('shp-write');\n\n// a GeoJSON bridge for features\nshpwrite.download({\n    type: 'FeatureCollection',\n    features: [\n        {\n            type: 'Feature',\n            geometry: {\n                type: 'Point',\n                coordinates: [0, 0]\n            },\n            properties: {\n                name: 'Foo'\n            }\n        },\n        {\n            type: 'Feature',\n            geometry: {\n                type: 'Point',\n                coordinates: [0, 10]\n            },\n            properties: {\n                name: 'Bar'\n            }\n        }\n    ]\n});\n// triggers a download of a zip file with shapefiles contained within.\n```\n\n## API\n\n### `download(geojson)`\n\nGiven a [GeoJSON](http://geojson.org/) FeatureCollection as an object,\nconverts convertible features into Shapefiles and triggers a download.\n\n### `write(data, geometrytype, geometries, callback)`\n\nGiven data, an array of objects for each row of data, geometry, the OGC standard\ngeometry type (like `POINT`), geometries, a list of geometries as bare coordinate\narrays, generate a shapfile and call the callback with `err` and an object with\n\n```js\n{\n    shp: DataView(),\n    shx: DataView(),\n    dbf: DataView()\n}\n```\n\n## Other Implementations\n\n* https://code.google.com/p/pyshp/\n\n## Reference\n\n* http://www.esri.com/library/whitepapers/pdfs/shapefile.pdf\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/tmcw/shp-write",
  "_id": "shp-write@0.1.5",
  "_shasum": "9076c99fb8a203001525bd0371a5002ca5077838",
  "_from": "shp-write@0.1.5",
  "_resolved": "https://registry.npmjs.org/shp-write/-/shp-write-0.1.5.tgz"
}
